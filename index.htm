<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="Content-type" content="text/html; charset=utf-8" />
    <meta name="keywords" content="Pray Time Application V 0.2.1" />
    <meta name="description" content="Experimental Pray Time Application V 0.2.1" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <meta http-equiv="Content-Security-Policy" content="script-src *  'unsafe-inline' http://api.geonames.org;">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.5.1/dist/leaflet.css" integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==" crossorigin="*" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <style>
        #list {
            width: 210px;
            height: 265px;
        }

            #list span {
                float: left;
                width: 50%;
                height: 20px;
            }
        /* Set black background color, white text and some padding */
        footer {
            background-color: #555;
            color: white;
            padding: 15px;
        }
        /* On small screens, set height to 'auto' for sidenav and grid */
        @media screen and (max-width: 767px) {
            .row.content {
                height: auto;
            }
        }
    </style>
    <script src="https://unpkg.com/leaflet@1.5.1/dist/leaflet.js" integrity="sha512-GffPMF3RvMeYyc1LWMHtK8EbPv0iNZ8/oTtHPx9/cc2ILxQ+u905qIwdpULaqDkyBKgOaB57QTMg7ztg8Jm2Og==" crossorigin="*"></script>
    <script src="calc.js"></script>
    <title>Pray Time Application</title>
</head>
<body>
    <div class="container-fluid text-center">
        <div class="row content">
            <div class="col-sm-12 text-left">

                <div id="mapid" style="width: 100%; min-height: 400px;"></div>
                <h4>Pray time calculation</h4>
                <p>This app is using new calculation formula. It will continue to improve as time goes on. For those who want to report errors and contribute to the calculations, please send an e-mail to muhammed.aycil@gmail.com.</p>


                <h4>Calculation is based on below formulas.</h4>
                <ul>
                    <li>Elevation Angle: <a href="https://pveducation.org/pvcdrom/properties-of-sunlight/elevation-angle" target="_blank">https://pveducation.org/pvcdrom/properties-of-sunlight/elevation-angle</a> </li>
                    <li>Solar noon :  <a href="https://www.esrl.noaa.gov/gmd/grad/solcalc/solareqns.PDF" target="_blank">https://www.esrl.noaa.gov/gmd/grad/solcalc/solareqns.PDF</a> </li>
					<li>Equation Of Time: :  <a href="https://pveducation.org/pvcdrom/properties-of-sunlight/solar-time" target="_blank">https://pveducation.org/pvcdrom/properties-of-sunlight/solar-time</a> </li>		
                    <li>Declination:  <a href="https://www.pveducation.org/pvcdrom/properties-of-sunlight/declination-angle" target="_blank">https://www.pveducation.org/pvcdrom/properties-of-sunlight/declination-angle</a></li>
					
                </ul>
				<p>
				Click for detail <a href='https://github.com/maycil/pray-time/blob/master/README.md' target='_blank'>Pray Time Calculation</a>
				</p>
				<h3 style='color:red;'>Pray time for flight specific arrangement.</h3>
                <p style='color:red;'>
                    <b>Calculations are made by subtracting degrees more than 45 degrees from locations above 45 degrees.</b>
                </p>

                <div id="list" style="display:none">
                    <span>Time</span>
                    <span id="time"></span>
                    <span>Timezone</span>
                    <span id="timezone"></span>
                    <span>Region</span>
                    <span id="timezoneId"></span>
                    <span>Lat/Lng</span>
                    <span id="latlng"></span>
                    <span>Dawn Time</span>
                    <span id="dawnTime"></span>
                    <span>Fajr Begin Time</span>
                    <span id="fajrBeginTime"></span>
                    <span>Fajr End Time</span>
                    <span id="fajrEndTime"></span>
                    <span>Tulu Time</span>
                    <span id="tuluTime"></span>
                    <span>Asr Time</span>
                    <span id="asrTime"></span>
                    <span>Maghrib Time</span>
                    <span id="maghribTime"></span>
                    <span>Isha Time</span>
                    <span id="ishaTime"></span>
                    <span>Isha End Time</span>
                    <span id="ishaEndTime"></span>
                    <span>Full Year Time</span>
                    <span id="fullyear"></span>
                    <span style="color:red;display:none" id="calcLatText">Calc latitude</span>
                    <span style="color:red;display:none" id="calcLatValue"></span>
                </div>
            </div>
        </div>
    </div>
    <script>
        var _map;
        UserLocation.getLocation(function () {
            _map = L.map('mapid').setView([UserLocation.latitude, UserLocation.longitude], 10);

            L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
                maxZoom: 10,
                attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
                '<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
                    'Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
                id: 'mapbox.streets'
            }).addTo(_map);

            var popup = L.popup();
            _map.on('click', function (e) {
                console.log(e);
                if (e.latlng == null) {
                    e.latlng = { lat: UserLocation.latitude, lng: UserLocation.longitude };
                }
                var xhttp = new XMLHttpRequest();
                xhttp.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        // Typical action to be performed when the document is ready:
                        var response = JSON.parse(xhttp.responseText)
                        document.getElementById("time").innerHTML = response.time;
                        document.getElementById("latlng").innerHTML = e.latlng.lat.toFixed(3) + " / " +e.latlng.lng.toFixed(3)
                        document.getElementById("timezoneId").innerHTML = response.timezoneId;
                        document.getElementById("timezone").innerHTML = response.dstOffset;
                        document.getElementById("fullyear").innerHTML = "<a href='fullyear.htm?latitude=" + e.latlng.lat + "&longitude=" + e.latlng.lng + "&dstOffset=" + response.dstOffset + "&timezone=" + response.gmtOffset + "&timezoneId=" + response.timezoneId + "' target='_blank'>Open</a>";

                        calculateTime(e.latlng.lat, e.latlng.lng, response.dstOffset)
                    }
                };

                xhttp.open("GET", "http://api.geonames.org/timezoneJSON?lat=" + e.latlng.lat + "&lng=" + e.latlng.lng + "&username=aycilm", true);
                xhttp.send();

                popup.setLatLng(e.latlng)
                    .setContent(" <h4>Pray Time</h4><div id='list'>" + document.getElementById("list").innerHTML + "</div>")
                    .openOn(_map);
            });

            _map.fire("click");
        });

        function calculateTime(latitude, longitude, timezone) {
            document.getElementById("calcLatText").style.display = "none";
            document.getElementById("calcLatValue").style.display = "none";
			if (latitude > 45) {
                latitude = 90 - latitude;
                console.log("calc latitude " + latitude);
				document.getElementById("calcLatText").style.display = "";
				document.getElementById("calcLatValue").style.display = "";
				document.getElementById("calcLatValue").innerHTML = latitude.toFixed(3);
			}
			if (latitude < -45) {
                latitude = -90 - latitude;
                console.log("calc latitude " + latitude);
				document.getElementById("calcLatText").style.display = "";
				document.getElementById("calcLatValue").style.display = "";
				document.getElementById("calcLatValue").innerHTML = latitude.toFixed(3);
			}

			var declination =  PrayTime.declination(new Date());
			var EoT = PrayTime.equationofTime(new Date());
            //console.log("EoT ", EoT, new Date());
            var elevationAngle = PrayTime.elevationAngle(latitude, declination, true);
            var elevationAngleNight = PrayTime.elevationAngle(latitude, declination, false);
            var tulutime = PrayTime.tuluTime(longitude, EoT, timezone);
            var sunset = PrayTime.sunSet(tulutime, declination, latitude, elevationAngle, EoT);
            var sunrise = PrayTime.sunRise(tulutime, declination, latitude, elevationAngle, EoT);

            document.getElementById("dawnTime").innerHTML = PrayTime.dawnTime(tulutime, declination, latitude, elevationAngleNight);
            document.getElementById("fajrBeginTime").innerHTML = PrayTime.fajrBeginTime(tulutime, declination, latitude, elevationAngleNight);
            document.getElementById("fajrEndTime").innerHTML = PrayTime.fajrEndTime(sunrise);
            document.getElementById("tuluTime").innerHTML = PrayTime.decimalToHour(tulutime);
            document.getElementById("asrTime").innerHTML = PrayTime.asrTime(tulutime, declination, latitude, elevationAngle);
            document.getElementById("maghribTime").innerHTML = PrayTime.maghribTime(sunset);
            document.getElementById("ishaTime").innerHTML = PrayTime.ishaTime(tulutime, declination, latitude, elevationAngleNight);
            document.getElementById("ishaEndTime").innerHTML = PrayTime.ishaEndTime(tulutime, declination, latitude, elevationAngleNight);
        }

    </script>

</body>
</html>

